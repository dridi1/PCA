invisible ="var",repel = TRUE,
ggtheme = theme_minimal ())
res.pca <- PCA(X, ncp = 4, graph = FALSE)
res.hcpc <- HCPC(res.pca,nb.clust = 4, graph = FALSE)
HCPC (res.pca1, nb.clust = 4, graph = TRUE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
library(readr) # Package for loading the csv file.
library(dplyr) # Package for manipulate DATA .
library(ggplot2) # Package for visualize DATA .
library(plotly) # Package for visualizing DATA in a interactive way .
library(corrplot)  # Package for visualizing correlation matrices .
library(DescTools) # Package for descriptive statistics and visualization tools .
library(ltm)
library(vcd)
library(knitr)
library(kableExtra)
library(infotheo)
library(caret)
library(caTools)
library(randomForest)
library(scorecard)
library(officer)
path_data <- "D:\\project_PFA Default of Credit Card Clients_Dataset_SAMER\\Initial_Dataset\\UCI_Credit_Card.csv"
UCI_Credit_Card <- data.frame(read.csv(path_data))
UCI_Credit_Card<-subset(UCI_Credit_Card,select = -ID)
colnames(UCI_Credit_Card)[colnames(UCI_Credit_Card) == "PAY_0"] <- "PAY_1"
colnames(UCI_Credit_Card)[colnames(UCI_Credit_Card) == "default.payment.next.month"] <- "Payment_Status"
col_names_Quanti<-c("LIMIT_BAL","AGE",
"BILL_AMT1","BILL_AMT2","BILL_AMT3","BILL_AMT4","BILL_AMT5","BILL_AMT6",
"PAY_AMT1","PAY_AMT2","PAY_AMT3","PAY_AMT4","PAY_AMT5","PAY_AMT6")
col_names_Cato<-c("SEX","EDUCATION","MARRIAGE",
"PAY_1","PAY_2","PAY_3","PAY_4","PAY_5","PAY_6",
"Payment_Status")
all_col_names<-c(col_names_Quanti,col_names_Cato)
for (nc in col_names_Cato) {
UCI_Credit_Card[[nc]]<-as.factor(UCI_Credit_Card[[nc]])
}
summary(UCI_Credit_Card[col_names_Quanti])
gg <- ggplot(UCI_Credit_Card, aes(x = LIMIT_BAL, fill = Payment_Status)) +
geom_histogram( color = "black") +
labs(title = "Distribution of LIMIT_BAL by Payment_Status",
x = "LIMIT_BAL",
y = "Count",
fill = "Payment_Status") +
theme_minimal()#+
#theme(plot.background = element_rect(fill = "#fffff8"))
ggplotly(gg)
ggplot(data = UCI_Credit_Card, aes(sample = LIMIT_BAL)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for LIMIT_BAL")
gg <- ggplot(UCI_Credit_Card, aes(x = AGE, fill = Payment_Status)) +
geom_histogram( color = "black") +
labs(title = "Distribution of AGE by Payment_Status",
x = "AGE",
y = "Count",
fill = "Payment_Status") +
theme_minimal()#+
#theme(plot.background = element_rect(fill = "#fffff8"))
ggplotly(gg)
ggplot(data = UCI_Credit_Card, aes(sample = AGE)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for AGE")
BILL_AMT_LIST<-list("BILL_AMT1","BILL_AMT2","BILL_AMT3","BILL_AMT4","BILL_AMT5","BILL_AMT6")
histogram_list <- lapply(BILL_AMT_LIST, function(col_name) {
plot_ly(UCI_Credit_Card, x = ~get(col_name), type = "histogram", histnorm = "probability density",nbinsx = 80,name = col_name) %>%
layout(title = "Histograms of Bill Amounts")
})
combined_plot <- subplot(histogram_list, nrows = 3)
combined_plot
ggplot(data = UCI_Credit_Card, aes(sample = BILL_AMT1)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for BILL_AMT1")
ggplot(data = UCI_Credit_Card, aes(sample = BILL_AMT2)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for BILL_AMT2")
ggplot(data = UCI_Credit_Card, aes(sample = BILL_AMT3)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for BILL_AMT3")
ggplot(data = UCI_Credit_Card, aes(sample = BILL_AMT4)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for BILL_AMT4")
ggplot(data = UCI_Credit_Card, aes(sample = BILL_AMT5)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for BILL_AMT5")
ggplot(data = UCI_Credit_Card, aes(sample = BILL_AMT6)) +
stat_qq() +
stat_qq_line(col = "red") +
labs(title = "Q-Q Plot for BILL_AMT6")
negative_BILL_AMT<-UCI_Credit_Card %>%
filter(BILL_AMT1 < 0 | BILL_AMT2 < 0 | BILL_AMT3 < 0 | BILL_AMT4 < 0 | BILL_AMT5 < 0 | BILL_AMT6 < 0)
head(negative_BILL_AMT)
PAY_AMT_list<-c("PAY_AMT1","PAY_AMT2","PAY_AMT3","PAY_AMT4","PAY_AMT5","PAY_AMT6")
histogram_list <- lapply(PAY_AMT_list, function(col_name) {
plot_ly(UCI_Credit_Card, x = ~get(col_name), type = "histogram",nbinsx = 70 ,name = col_name) %>%
layout(title ="Histograms of Pay Amounts")
})
combined_plot <- subplot(histogram_list, nrows = 3)
combined_plot
# Define a small constant to add to the variable
epsilon <- 1e-10
histogram_list <- lapply(PAY_AMT_list, function(col_name) {
plot_ly(UCI_Credit_Card, x = ~log(get(col_name) + epsilon), type = "histogram", nbinsx = 70 , name = col_name) %>%
layout(title = "Histograms of Pay Amounts")
})
combined_plot <- subplot(histogram_list, nrows = 3)
combined_plot
summary(UCI_Credit_Card[col_names_Cato])
SEX_counts <- table(UCI_Credit_Card$SEX)
plot_ly(labels = c("Male", "Female"), values = SEX_counts, type = 'pie') %>%
layout(annotations = list(
x = 0,
y = 1,
xref = "paper",
yref = "paper",
text = "Pie Chart for SEX",
font = list(color = "black", size = 20),
showarrow = FALSE),piecolorway = c( "pink","blue"))
EDUCATION_counts <- table(UCI_Credit_Card$EDUCATION)
EDUCATION_counts
plot_ly(labels = list("unlabel","graduate school","university", "high school", "others", "unknown", "unknown"), values = EDUCATION_counts, type = 'pie') %>%
layout(annotations = list(
x = 0,
y = 1,
xref = "paper",
yref = "paper",
text = "Pie Chart for EDUCATION",
font = list(color = "black", size = 15),
showarrow = FALSE))
MARRIAGE_counts <- table(UCI_Credit_Card$MARRIAGE)
MARRIAGE_counts
plot_ly(labels = c("unlabel","married", "single", "others"), values = MARRIAGE_counts, type = 'pie') %>%
layout(annotations = list(
x = 0,
y = 1,
xref = "paper",
yref = "paper",
text = "Pie Chart for MARRIAGE",
font = list(color = "black", size = 15),
showarrow = FALSE))
labels_PAY <- c("-2" = "unlabel(-2)", "-1" = "pay duly", "0" = "unlabel(0)",
"1" = "pay_del_1_mth", "2" = "pay_del_2_mths",
"3" = "pay_del_3_mths", "4" = "pay_del_4_mths",
"5" = "pay_del_5_mths", "6" = "pay_del_6_mths",
"7" = "pay_del_7_mths", "8" = "pay_del_8_mths",
"9" = "pay_del_9_mths_above")
ggplotly(
ggplot(UCI_Credit_Card, aes(x = PAY_1, fill = PAY_1)) +
geom_bar() +
labs(title = "Bar Plot by PAY_1", y = "Frequency") +
theme_classic() +
scale_x_discrete(labels = labels_PAY)+theme(axis.text.x = element_text(angle = 45, hjust = 1))
)
ggplotly(
ggplot(UCI_Credit_Card, aes(x = PAY_2, fill = PAY_2)) +
geom_bar() +
labs(title = "Bar Plot by PAY_2", y = "Frequency") +
theme_classic() +
scale_x_discrete(labels = labels_PAY)+theme(axis.text.x = element_text(angle = 45, hjust = 1))
)
ggplotly(
ggplot(UCI_Credit_Card, aes(x = PAY_3, fill = PAY_3)) +
geom_bar() +
labs(title = "Bar Plot by PAY_3", y = "Frequency") +
theme_classic() +
scale_x_discrete(labels = labels_PAY)+theme(axis.text.x = element_text(angle = 45, hjust = 1))
)
ggplotly(
ggplot(UCI_Credit_Card, aes(x = PAY_4, fill = PAY_4)) +
geom_bar() +
labs(title = "Bar Plot by PAY_4", y = "Frequency") +
theme_classic() +
scale_x_discrete(labels = labels_PAY)+theme(axis.text.x = element_text(angle = 45, hjust = 1)
))
ggplotly(
ggplot(UCI_Credit_Card, aes(x = PAY_5, fill = PAY_5)) +
geom_bar() +
labs(title = "Bar Plot by PAY_5", y = "Frequency") +
theme_classic() +
scale_x_discrete(labels = labels_PAY)+theme(axis.text.x = element_text(angle = 45, hjust = 1))
)
ggplotly(
ggplot(UCI_Credit_Card, aes(x = PAY_6, fill = PAY_6)) +
geom_bar() +
labs(title = "Bar Plot by PAY_6", y = "Frequency") +
theme_classic() +
scale_x_discrete(labels = labels_PAY)+theme(axis.text.x = element_text(angle = 45, hjust = 1))
)
PayStatue_counts <- table(UCI_Credit_Card$Payment_Status)
plot_ly(labels = c("Non_default", "Default"), values = PayStatue_counts, type = 'pie') %>%
layout(annotations = list(
x = 0,
y = 1,
xref = "paper",
yref = "paper",
text = "Pie Chart for\n Payment_Status",
font = list(color = "black", size = 14),
showarrow = FALSE),piecolorway = c("blue", "lightcoral"))
library(readxl)
library(FactoMineR)
library(ggplot2)
library(factoextra)
library(dplyr)
library(corrplot)
library(questionr)
data <- read_excel("D://Analyse//PCA//final_data.xlsx")
data <- data.frame(data)
#data.info()
data$sexe<-factor(data$sexe,levels=c("Male","Female"))
freq=table((data$sexe))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("Male","Female"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Répartition des mâles et des femelles")
data$sexe<-factor(data$Age,levels=c("Between 18 and 25","Over 40"))
freq=table((data$Age))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("Between 18 and 25","Over 40"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="AGE")
data$education<-factor(data$education,levels=c("University education","Primary education"))
freq=table((data$education))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("University education","Primary education"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Education")
data$Country_of_choice<-factor(data$Country_of_choice,levels=c("Germany","Other","Italy","Canada","France","U_S_A"))
freq=table((data$Country_of_choice))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("Germany","Other","Italy","Canada","France","U_S_A"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="country of choices")
X=as.matrix(data[,12:42])
res.pca1 <- PCA (X,graph=FALSE)
eig.val1 <- get_eigenvalue(res.pca1)
eig.val1
var1 <- get_pca_var(res.pca1)
var1
corrplot(var1$cos2,tl.cex = 0.5, is.corr=FALSE)
res.pca1$var$coord
fviz_eig(res.pca1, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca1, axes=c(1,2), col.var="cos2") +
scale_color_gradient2(low="white", mid="blue",
high="red", midpoint=0.6) +
theme_minimal()
fviz_pca_ind(res.pca1,geom ="text",col.ind="cos2")+
scale_color_gradient2(low="blue", mid="white",
high="red", midpoint=0.5)
plot.PCA(res.pca1, axes=c(1, 2), choix="ind", cex=0.7)
res.mca <- MCA (data[,3:8], graph = FALSE)
res.mca$eig
fviz_screeplot(res.mca)
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_biplot(res.mca,
col.ind="cos2",
invisible ="var",repel = TRUE,
ggtheme = theme_minimal ())
res.pca <- PCA(X, ncp = 4, graph = FALSE)
res.hcpc <- HCPC(res.pca,nb.clust = 4, graph = FALSE)
HCPC (res.pca1, nb.clust = 4, graph = TRUE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
library(readxl) #used for importing exel data
library(FactoMineR) #used for applying PCA, MCA & classification
library(factoextra) #
library(ggplot2) # visualization
library(dplyr) # data manipulation
library(corrplot) # plotting the corrolation
library(questionr)
library(flextable) # print pretty tables
data <- read_excel("D://Analyse//PCA//final_data.xlsx")
data <- data.frame(data)
paste("In our data, We have",ncol(data),"variable And",nrow(data),"Observation")
data$sexe<-factor(data$sexe,levels=c("Male","Female"))
freq=table((data$sexe))
perc<- round(freq/sum(freq)*100)
labls1 <- paste(c("Male","Female"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1,col=c("blue", "pink"),main="Distribution of Gender")
data$sexe<-factor(data$Age,levels=c("Between 18 and 25","Over 40"))
freq=table((data$Age))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("Between 18 and 25,","Over 40,"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Distribution of Age")
data$education<-factor(data$education,levels=c("University education","Primary education"))
freq=table((data$education))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("University education","Primary education"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Distribution of Education")
data$Country_of_choice<-factor(data$Country_of_choice,levels=c("Germany","Other","Italy","Canada","France","U_S_A"))
freq=table((data$Country_of_choice))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("Germany","Other","Italy","Canada","France","U_S_A"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Distribution of country of choice")
X2=as.matrix(data[,22:31])
res.pca2 <- PCA (X2,graph=F)
res.pca2
#get the eignvalue
eig_val2 <- res.pca2$eig
#transform to a better table
eig_val2<-data.frame(eig_val2)
DIM <- paste("Dim.", 1:10, sep = "")
eig_val2 <- cbind(DIM,eig_val2)
ft <- flextable(eig_val2)
ft <- autofit(ft)
theme_zebra(ft)
var1 <- get_pca_var(res.pca2)
var1
corrplot(var1$cos2,tl.cex = 0.8, is.corr=F)
s<-res.pca2$var$coord
s<-data.frame(s)
Question <- paste("Q.", 1:10, sep = "")
s <- cbind(Question,s)
ft <- qflextable(s)
ft <- autofit(ft)
theme_zebra(ft)
fviz_eig(res.pca2, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca2, axes=c(1,2), col.var="cos2") +
scale_color_gradient2(low="white", mid="blue",
high="red", midpoint=0.6)
fviz_pca_ind(res.pca2,geom ="text",col.ind="cos2")+
scale_color_gradient2(low="blue", mid="white",
high="red", midpoint=0.5)
plot.PCA(res.pca2, axes=c(1, 2), choix="ind", cex=0.7)
res.mca <- MCA (data[,3:8], graph = FALSE)
d<-data.frame(res.mca$eig)
DIM <- paste("Dim.", 1:6, sep = "")
d <- cbind(DIM,d)
ft <- flextable(d)
ft <- autofit(ft)
theme_zebra(ft)
fviz_screeplot(res.mca)
fviz_mca_var(res.mca,repel = TRUE,ggtheme = theme_minimal ())
fviz_mca_biplot(res.mca,
col.ind="cos2",
invisible ="var",repel = TRUE,
ggtheme = theme_minimal ())
res.pca <- PCA(X2, ncp = 4, graph = FALSE)
res.hcpc <- HCPC(res.pca,nb.clust = 4, graph = FALSE)
HCPC (res.pca2, nb.clust = 4, graph = TRUE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.pca <- PCA(X2, ncp = 4, graph = FALSE)
res.hcpc <- HCPC(res.pca,nb.clust = 4, graph = FALSE)
HCPC (res.pca, nb.clust = 4, graph = TRUE)
?fiv_cluster
?fviz_cluster
eig_val2
```{r fig.height=1, fig.width=1}
data$sexe<-factor(data$sexe,levels=c("Male","Female"))
freq=table((data$sexe))
perc<- round(freq/sum(freq)*100)
labls1 <- paste(c("Male","Female"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1,col=c("blue", "pink"),main="Distribution of Gender")
library(readxl) #used for importing exel data
library(FactoMineR) #used for applying PCA, MCA & classification
library(factoextra) #used for applying PCA, MCA & classification
library(ggplot2) # visualization
library(dplyr) # data manipulation
library(corrplot) # plotting the corrolation
library(questionr)
library(flextable) # print pretty tables
data <- read_excel("D://Analyse//PCA//final_data.xlsx")
data <- data.frame(data)
paste("In our data, We have",ncol(data),"variable And",nrow(data),"Observation")
data$sexe<-factor(data$sexe,levels=c("Male","Female"))
freq=table((data$sexe))
perc<- round(freq/sum(freq)*100)
labls1 <- paste(c("Male","Female"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1,col=c("blue", "pink"),main="Distribution of Gender")
data$sexe<-factor(data$Age,levels=c("Between 18 and 25","Over 40"))
freq=table((data$Age))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("Between 18 and 25,","Over 40,"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Distribution of Age")
data$education<-factor(data$education,levels=c("University education","Primary education"))
freq=table((data$education))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("University education","Primary education"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Distribution of Education")
data$Country_of_choice<-factor(data$Country_of_choice,levels=c("Germany","Other","Italy","Canada","France","U_S_A"))
freq=table((data$Country_of_choice))
perc <- round(freq/sum(freq)*100)
labls1 <- paste(c("Germany","Other","Italy","Canada","France","U_S_A"),perc)
labls1 <- paste(labls1,"%",sep="")
pie(freq,labels = labls1, col=rainbow(length(labls1)),main="Distribution of country of choice")
X2=as.matrix(data[,22:31])
res.pca2 <- PCA (X2,graph=F)
#get the eignvalue
eig_val2 <- res.pca2$eig
#transform to a better table
eig_val2<-data.frame(eig_val2)
DIM <- paste("Dim.", 1:10, sep = "")
eig_val2 <- cbind(DIM,eig_val2)
ft <- flextable(eig_val2)
ft <- autofit(ft)
theme_zebra(ft)
var1 <- get_pca_var(res.pca2)
var1
corrplot(var1$cos2,tl.cex = 0.8, is.corr=F)
s<-res.pca2$var$coord
s<-data.frame(s)
Question <- paste("Q.", 1:10, sep = "")
s <- cbind(Question,s)
ft <- qflextable(s)
ft <- autofit(ft)
theme_zebra(ft)
fviz_eig(res.pca2, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca2, axes=c(1,2), col.var="cos2") +
scale_color_gradient2(low="white", mid="blue",
high="red", midpoint=0.6)
fviz_pca_ind(res.pca2,geom ="text",col.ind="cos2")+
scale_color_gradient2(low="blue", mid="white",
high="red", midpoint=0.5)
plot.PCA(res.pca2, axes=c(1, 2), choix="ind", cex=0.7)
res.mca <- MCA (data[,3:8], graph = FALSE)
d<-data.frame(res.mca$eig)
DIM <- paste("Dim.", 1:6, sep = "")
d <- cbind(DIM,d)
ft <- flextable(d)
ft <- autofit(ft)
theme_zebra(ft)
fviz_screeplot(res.mca)
fviz_mca_var(res.mca,repel = TRUE,ggtheme = theme_minimal ())
fviz_mca_biplot(res.mca,
col.ind="cos2",
invisible ="var",repel = TRUE,
ggtheme = theme_minimal ())
res.pca <- PCA(X2, ncp = 4, graph = FALSE)
res.hcpc <- HCPC(res.pca,nb.clust = 4, graph = FALSE)
HCPC (res.pca, nb.clust = 4, graph = TRUE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc$call
res.hcpc$desc.var
res.pca <- PCA(X2, ncp = 4, graph = FALSE)
res.hcpc <- HCPC(res.pca,nb.clust = 4, graph = FALSE)
HCPC (res.pca, nb.clust = 4, graph = TRUE)
res.hcpc$desc.ind
res.pca <- PCA(X2, ncp = 4, graph = FALSE)
res.hcpc <- HCPC(res.pca,nb.clust = 4, graph = FALSE)
HCPC (res.pca, nb.clust = 4, graph = TRUE)
res.hcpc$desc.var
?catdesc
?catdes
library(factoextra)
library(FactoMineR)
?catdes
library(FactoMineR)
data("mortality")
summary(mortality)
View(mortality)
library(ggplot2)
mortality$
ggplot(mortality,aes(`15-24 (79)`))+GeomSf()
mortality$
ggplot(mortality,aes(`15-24 (79)`))+geom_histogram()
mortality$
ggplot(mortality,aes(x=15-24 (79)))+geom_histogram()
summary(mortality)
ggplot(mortality,aes(x=15-24 (79)))+geom_histogram()
rlang::last_trace()
mortality$first<-mortality$`15-24 (79)`
ggplot(mortality,aes(x=first))+geom_histogram()
data("mortality")
dim(mortality)
?t()
mortality<-t(mortality)
typeof(mortality)
mortality<-data.frame(mortality)
ggplot(mortality,aes(Suicides))+geom_histogram()
ggplot(mortality,aes(Suicides))+geom_bar()
ggplot(mortality,aes(Suicides))+geom_boxplot()
ggplot(mortality,aes(Suicides))+geom_dotplot()
ggplot(mortality,aes(Suicides))+geom_text()
ggplot(mortality,aes(Suicides))+geom_line()
